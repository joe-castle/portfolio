// ---------------------------------------------
// ------ Variables
// ---------------------------------------------
text-font-stack = 'Source Sans Pro', 'Arial', sans-serif
code-font-stack = 'Source Code Pro', 'Monaco', monospace

container-padding = .5

header-background-color = #2C313A
header-color = blue-500
header-hover-color = blue-500
header-img-size = 3
header-height = header-img-size + (container-padding * 2)

body-background-color = #f2f2f2
body-color = grey-900

footer-color = lighten(header-background-color, 35%)
footer-height = 4

layout-transition-time = .2s
border-size = 3px

breakpoints = {
  tablet: 768px,
  desktop: 1050px
}

// Used in creating a meterial design box-shdaow
z-depth-grades = {
  '1': '0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)',
  '1.5': '0 5px 11px 0 rgba(0,0,0,0.18), 0 4px 15px 0 rgba(0,0,0,0.15)',
  '2': '0 8px 17px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)',
  '3': '0 12px 15px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19)',
  '4': '0 16px 28px 0 rgba(0,0,0,0.22), 0 25px 55px 0 rgba(0,0,0,0.21)',
  '5': '0 27px 24px 0 rgba(0,0,0,0.2), 0 40px 77px 0 rgba(0,0,0,0.22)'
}

icons = {
  Github: '\0041',
  Codepen: '\0042',
  FCC: '\0043',
  Linkedin: '\0044',
  Facebook: '\0045',
  Email: '\0046',
  npm: '\0047'
}

// TODO: Extrapolate all the properts that rely on another, e.g. img size and nav padding into variables

// ---------------------------------------------
// ------ Functions
// ---------------------------------------------


// ---------------------------------------------
// ------ Mixins
// ---------------------------------------------
// Creates a material design style box-shadow.
z-depth(grade)
  box-shadow: unquote(z-depth-grades[grade])

// Save having to right hover, active and focus on all links.
hover-state()
  &:hover
  &:active
  &:focus
    {block}

// Nibs position Mixins
-pos(type, args)
  i = 0
  position: unquote(type)
  for j in (1..4)
    if length(args) > i
      {args[i]}: args[i + 1] is a 'unit' ? args[i += 1] : 0
    i += 1

fixed()
  -pos('fixed', arguments)

absolute()
  -pos('absolute', arguments)

relative()
  -pos('relative', arguments)

// Maintains the aspect ratio of a given element
aspect-ratio(width, height)
  position relative

  &::before
    content ''
    display block
    padding-top (height / width) * 100%

  > *
    absolute top right bottom left
