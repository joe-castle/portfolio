// ---------------------------------------------
// ------ Variables
// ---------------------------------------------
text-font-stack = 'Source Sans Pro', 'Arial', sans-serif
code-font-stack = 'Source Code Pro', 'Monaco', monospace

container-padding = .5

header-background-color = #2C313A
header-color = blue-500
header-hover-color = blue-500
header-img-size = 3
header-height = header-img-size + (container-padding * 2)

body-background-color = #f2f2f2
body-color = grey-900

content-color = #fafafa

footer-color = lighten(header-background-color, 35%)
footer-height = 4

layout-transition-time = .2s
border-size = 3px

breakpoints = {
  mobile: 400px,
  tablet: 768px,
  desktop: 1050px
}

// Used in creating a meterial design box-shdaow
z-depth-grades = {
  '1': {
    normal: '0 1px 4px 0 rgba(0,0,0,0.37)',
    hover: '0 2px 2px 0 rgba(0,0,0,0.2), 0 6px 10px 0 rgba(0,0,0,0.3)'
  },
}

icons = {
  Github: '\0041',
  Codepen: '\0042',
  FCC: '\0043',
  Linkedin: '\0044',
  Facebook: '\0045',
  Email: '\0046',
  npm: '\0047'
}

// TODO: Extrapolate all the properts that rely on another, e.g. img size and nav padding into variables

// ---------------------------------------------
// ------ Functions
// ---------------------------------------------


// ---------------------------------------------
// ------ Mixins
// ---------------------------------------------

// Creates a material design style box-shadow.
z-depth(grade, hover = false)
  box-shadow: unquote(z-depth-grades[grade].normal)
  transition box-shadow .2s linear

  if hover
    +hover-state()
      box-shadow: unquote(z-depth-grades[grade].hover)

// Save having to right hover, active and focus on all links.
// TODO: Provide a transition for all hoverstates ?
hover-state()
  &:hover
  &:active
  &:focus
    {block}

// Nibs position Mixins
-pos(type, args)
  i = 0
  position: unquote(type)
  for j in (1..4)
    if length(args) > i
      {args[i]}: args[i + 1] is a 'unit' ? args[i += 1] : 0
    i += 1

fixed()
  -pos('fixed', arguments)

absolute()
  -pos('absolute', arguments)

relative()
  -pos('relative', arguments)

// Maintains the aspect ratio of a given element when resized
aspect-ratio(width, height)
  position relative

  &::before
    content ''
    display block
    padding-top (height / width) * 100%

  > *
    absolute top right bottom left

// Creates a custome range input with configurable primary and secondary colors
custom-range-input(primary, secondary, width)
  track-height = 6px
  track-margin = 22px - track-height

  thumb-height = 36px
  thumb-width = 16px
  thumb-margin = -(22px - track-height)

  input[type=range]
    // Reset styles to apply own.
    background transparent
    -webkit-appearance none
    width width

    &:focus
      outline none

    &::-webkit-slider-thumb
      -webkit-appearance none

    &::-ms-track
      width 100%
      cursor pointer
      background transparent
      border-color transparent
      color transparent

    // Custom styles
    &::-webkit-slider-runnable-track
      width 100%
      height track-height
      cursor pointer
      background: secondary
      margin-top track-margin

    &::-webkit-slider-thumb
      height thumb-height
      width thumb-width
      background: primary
      cursor pointer
      -webkit-appearance none
      margin-top thumb-margin

    &::-moz-range-track
      width 100%
      height track-height
      cursor pointer
      background: secondary

    &::-moz-range-thumb
      height thumb-height
      width thumb-width
      background: secondary
      cursor pointer

    &::-ms-track
      width 100%
      height track-height
      cursor pointer
      background transparent
      border-color transparent
      color transparent

    &::-ms-fill-lower
      background: primary

    &::-ms-fill-upper
      background: secondary

    &::-ms-thumb
      height thumb-height
      width thumb-width
      background: secondary
      cursor pointer
